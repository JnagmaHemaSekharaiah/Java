Polymorphism
-------------
Show a message in different forms

Types in Polymorphism
---------------------
1.Compile time polymorphism
2.Run time Polymorphism

1.Compile time polymorphism
----------------------------
We achieve by function overloading or Operator overloading

Note : Operator overloading is does not support the java.

method overloading :In the same class When the multiple functions with same name but different in number or type of arguments

2.Run time Polymorphism (Dynamic method Dispatch)
------------------------------------------------
1.A Super class reference variable can refer to a subclass object known as the upcasting.
2.We Can not do override variables

(i)Access modifiers VS Overriding
------------------------------
Private methods can not be overridden
protected  :  A protected super class method Can be over ridden only by Public, Protected subclass method.
Default (Package-Private) : a Default (Package-Private) super class method Can be over ridden only by Public, Protected subclass method.
Public : A Public method in the Super Class Can only be over ridden public method in the Sub class.

(ii)Final methods can not be over ridden

(iii)Static method can not be overridden

---------------------------------------------------------------------------------------------
|                           |  Superclass Instance Method    | Superclass Static Method       |
|--------------------------------------------------------------------------------------------
| Subclass Instance Method  |	Overrides	                 | Generates a compile-time error |
| -------------------------------------------------------------------------------------------
|  Subclass Static Method   |Generates a compile-time error  |	Hides                          |
---------------------------------------------------------------------------------------------

(iv)Sub class methods should have the Same return type (or Sub type)
------------------------------------------------------------------
This Phenomenon know as the "covariant return type"

(V)We can not Override Constructor
-----------------------------------

(Vi)Overriding and Exception-Handling
--------------------------------------
Rule #1 : IF the Super Class Overriding method can not throwing any exception then subclass method only throws 'Unchecked Exception'

Rule #2 : IF the Super Class Overriding method can throwing any exception then subclass can throw Same exception and also no issue if the subclass
          Overridden method is not throwing any exception and if subclass throwing parent exception in the Exception Hierarchy will lead compile error

(Vii) Overriding and Abstract method
------------------------------------
Abstract methods in an interface or abstract class are meant to be overridden in derived concrete classes otherwise a compile-time error will be thrown.
