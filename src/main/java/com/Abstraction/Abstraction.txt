Abstraction in java 
--------------------
In java we can achieve abstraction by 'interface' and 'abstract classes' in java 

Concreate Class : A Class which was implemented all the methods and able to create object 
Concreate method : having the complete implementation (code block) in a class

Java Abstract classes and Java Abstract methods
------------------------------------------------
1.An abstract class is declare by abstract key word
2.An abstract method can be declared without implementation.
3.An abstract class may or may not have the all abstract methods. Some of them are the concreate methods.
4.A abstract method must be redefined in the subclass, thus making 'overridden' compulsory.
5.A class contain one or more abstract methods must be declared as the abstract key word.
6.Abstract class no object, We can not instantiate abstract class with new operator.
7.An abstract  class can have a parametrized contactor and default contactor is always present in an abstract class.

Abstract classes   
-----------------
class -> abstract keyword to make as abstract class 
method -> we define without body to make as abstract class
variables->We can't make the abstract. 

1.An instance of an abstract class can not be created.
2.Constructors are allowed.
3.We can have an abstract class without any abstract method.
4.There can be a final method in abstract class but any abstract method in class(abstract class) can not be declared 
  as final  or in simpler terms final method can not be abstract itself as it will yield an error: “Illegal combination 
  of modifiers: abstract and final”
5.We can define static methods in an abstract class
6.We can use the abstract keyword for declaring top-level classes (Outer class) as well as inner classes as abstract
7.If a class contains at least one abstract method then compulsory should declare a class as abstract
8.If the Child class is unable to provide implementation to all abstract methods of the Parent class then we should declare
  that Child class as abstract so that the next level Child class should provide implementation to the remaining abstract method
	

Interface
---------
1.used to achieve total abstraction
2.we can do multiple inheritance
3.we can loose coupling

In the Interface all methods are public and fields(variables) are public, static, final.

In the JDK 8 added new feature
------------------------------
1.using default keyword we can add method body interface. - By doing this without breaking the existing implementation we can add new feature in the interface
2.We can define the static methods inside the interfaces than can call called independently without an object

JDK 9 new feature
------------------
1.Introduced private methods in interfaces.

Types of interfaces
-------------------
maker interface
Functional interface